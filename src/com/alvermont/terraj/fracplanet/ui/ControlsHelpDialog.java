/*
 * Java Terrain and Stellar System Ports
 *
 * Copyright (C) 2006 Martin H. Smith based on work by original
 * authors.
 *
 * Released under the terms of the GNU General Public License
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA  02110-1301, USA.
 *
 * Linking TerraJ statically or dynamically with other modules is making a
 * combined work based on TerraJ. Thus, the terms and conditions of the
 * GNU General Public License cover the whole combination.
 *
 * In addition, as a special exception, the copyright holders of TerraJ
 * give you permission to combine this program with free software programs
 * or libraries that are released under the GNU LGPL and with code included
 * in the standard release of JOGL, Java Getopt and FreeMarker under the BSD
 * license (or modified versions of such code, with unchanged license) and with
 * Apache Commons and Log4J libraries under the Apache license (or modified versions
 * of such code. You may copy and distribute such a system following the terms
 * of the GNU GPL for TerraJ and the licenses of the other code concerned,
 * provided that you include the source code of that other code when and as the
 * GNU GPL requires distribution of source code.
 *
 * Note that people who make modified versions of TerraJ are not obligated to grant
 * this special exception for their modified versions; it is their choice whether
 * to do so. The GNU General Public License gives permission to release a modified
 * version without this exception; this exception also makes it possible to release
 * a modified version which carries forward this exception.
 */

/*
 * ControlsHelpDialog.java
 *
 * Created on 17 January 2006, 11:20
 */
package com.alvermont.terraj.fracplanet.ui;


/**
 * A dialog containing help information on the camera keys for the free
 * camera mode.
 *
 * @author  martin
 * @version $Id: ControlsHelpDialog.java,v 1.5 2006/07/06 06:58:34 martin Exp $
 */
public class ControlsHelpDialog extends javax.swing.JDialog
{
    /**
     * Creates new form ControlsHelpDialog
     *
     * @param parent The parent of this object
     * @param modal Whether this should be a modal dialog or not
     */
    public ControlsHelpDialog(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
    }

    // NETBEANS SWING CODE USE RELAXED CHECKSTYLE SETTINGS

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setTitle("Keyboard Controls");
        jLabel1.setText(
            "Use the following keys to move the camera in fly mode:");

        jTable1.setModel(
            new javax.swing.table.DefaultTableModel(
                new Object[][]
                {
                    { "Move camera forward", "W" },
                    { "Move camera back", "S" },
                    { "Move camera left", "A" },
                    { "Move camera right", "D" },
                    { null, null },
                    { "Rotate camera left", "Numpad 4" },
                    { "Rotate camera right", "Numpad 6" },
                    { "Rotate camera up", "Numpad 8" },
                    { "Rotate camera down", "Numpad 2" },
                    { null, null },
                    { "Increase speed", "Shift" },
                    { null, null },
                    { "Reset camera", "Backspace or Del" },
                    { null, null }
                }, new String[] { "Action", "Key(s)" })
            {
                Class[] types =
                    new Class[] { java.lang.String.class, java.lang.String.class };
                boolean[] canEdit = new boolean[] { false, false };

                public Class getColumnClass(int columnIndex)
                {
                    return types[columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex)
                {
                    return canEdit[columnIndex];
                }
            });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(jTable1);

        org.jdesktop.layout.GroupLayout layout =
            new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane()
            .setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(
                layout.createSequentialGroup().addContainerGap().add(
                    layout.createParallelGroup(
                        org.jdesktop.layout.GroupLayout.LEADING).add(
                        jScrollPane1,
                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 358,
                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).add(
                        jLabel1)).addContainerGap(15, Short.MAX_VALUE)));
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(
                layout.createSequentialGroup().addContainerGap().add(jLabel1).addPreferredGap(
                    org.jdesktop.layout.LayoutStyle.RELATED).add(
                    jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                    404, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addContainerGap(
                    org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    Short.MAX_VALUE)));
        pack();
    } // </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;

    // End of variables declaration//GEN-END:variables
}
